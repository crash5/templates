[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "0.0.0"
description = "{{ cookiecutter.project_short_description }}"
license = "Proprietary"
authors = ["{{ cookiecutter.project_author }}"]
readme = "README.md"
packages = [
    { include = "{{ cookiecutter.package_name }}", from = "src" },
]
# dynamic = ["version"]
include = [
    "src/{{ cookiecutter.package_name }}/VERSION"
]

####################
# Dependencies
####################

[tool.poetry.dependencies]
python = "{{ cookiecutter.python_version_constraint }}"
# pyyaml = "*"
# azure-core = "*"
# azure-identity = "*"
# azure-storage-blob = "*"
# pandas = "*"
# polars = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-repeat = "*"
mypy = "*"
flake8 = "*"
flake8-pyproject = "*"
black = "*"
# bandit = "*"
# pylint = "*"
# pip-audit = "*"
# pandas-stubs = "*"

# types-pyyaml = "*"
# sphinx = "*"
# sphinx-markdown-builder = "*"
# sphinxcontrib-mermaid = "*"

#############################
# External tool configuration
#############################

[tool.poetry-dynamic-versioning]
enable = true

[tool.poetry-dynamic-versioning.substitution]
patterns = [
    "()0.0.0-non-production-ready()"  # 2 empty capturing group because we don"t want to keep anything around the pattern
]
files = [
    "*/VERSION"
]
folders = [
    { path = "src" }
]

[tool.poetry-dynamic-versioning.files."src/{{ cookiecutter.package_name }}/VERSION"]
persistent-substitution = true
initial-content = "0.0.0-non-production-ready"

[tool.pytest.ini_options]
addopts = "--quiet -r A --import-mode=importlib"
testpaths = ["tests"]

[tool.pydeps]
reverse = true
include_missing = true
exclude = ["yaml", "pandas", "os", "re", "sys", "collections", "__future__"]

[tool.flake8]
max-line-length = 200

[tool.mypy]
files = ["src/"]
pretty = true
strict = true
check_untyped_defs = true

disallow_untyped_defs = true
allow_untyped_calls = false
# disallow_any_expr = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_incomplete_defs = true
enable_error_code = "redundant-expr, truthy-bool, truthy-iterable, unused-awaitable"
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

